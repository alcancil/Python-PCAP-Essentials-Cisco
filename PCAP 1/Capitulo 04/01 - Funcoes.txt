# Key takeaways
# 
# 1. Uma função é um bloco de código que executa uma tarefa específica quando a função é chamada (invocada). Pode utilizar funções para tornar o seu código reutilizável, mais bem organizado e mais legível. # As funções podem ter parâmetros e valores de retorno.
# 
# 2. Existem pelo menos quatro tipos básicos de funções em Python:
# 
# funções incorporadas que são parte integrante do Python (tais como a função print() ). Pode ver uma lista completa de funções Python incorporadas em https://docs.python.org/3/library/functions.html.
# as que vêm de módulos pré-instalados (aprenderá sobre eles no curso Python Essentials 2)
# funções definidas pelo utilizador que são escritas por utilizadores para utilizadores - pode escrever as suas próprias funções e utilizá-las livremente no seu código,
# as funções lambda (aprenderá sobre elas no curso Python Essentials 2.)
# 3. Pode definir a sua própria função usando a keyword def e a seguinte sintaxe:
# 
# def your_function(optional parameters):
#    # the body of the function
#
#
# Pode definir uma função que não aceita quaisquer argumentos, por exemplo:
#
# def message():    # defining a function
#    print("Hello")    # body of the function
#
# message()    # calling the function
#
#
# Pode definir uma função que também aceita argumentos, tal como a função de um parámetro abaixo:
#
# def hello(name):    # defining a function
#     print("Hello,", name)    # body of the function
#
#
# name = input("Enter your name: ")
#
# hello(name)    # calling the function
#
#
# Na próxima secção, falaremos mais sobre as funções parametrizadas. Não se preocupe.




# Exercício 1
#
# A função input() é um exemplo de uma:
#
# a) função definida pelo utilizador
# b) função incorporada
#
# Verifique
# b - é uma função incorporada
#
#
# Exercício 2
#
# O que acontece quando se tenta invocar uma função antes de a definir? Exemplo:
#
# hi()
#
# def hi():
#    print("hi!")
#
#
# Verifique
# É lançada uma exceção (a exceção NameError para sermos mais precisos)
#
#
# Exercício 3
#
# O que acontecerá quando executar o código abaixo?
#
# def hi():
#    print("hi")
#
# hi(5)
#
#
# Verifique
# É lançada uma exceção (a exceção TypeError para sermos mais precisos) - a função hi() não toma quaisquer argumentos